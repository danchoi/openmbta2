

http://elegantcode.com/2009/07/01/jquery-playing-with-select-dropdownlistcombobox/

<select id="ComboBox" >
  <option value="1">Value 1</option>
  <option value="2">Value 2</option>
  <option value="3">Value 3</option>
  <option value="4">Value 4</option>
  <optgroup label="Group1">
    <option value="5">Value 5</option>
    <option value="6">Value 6</option>
    <option value="7">Value 7</option>
    <option value="8">Value 8</option>
  </optgroup>
</select>

<script src="http://gist.github.com/1125458.js?file=stations.json"></script>



http://docmatic.fr/temp/test.html


1. pick route and direction
2. show stop list + map of all stops

    pick from text list or from map  

    deal with problem of spurs later
      spurs means the map is a better interface for selecting stops
  
3. pick start and end stops
4. show trips covering that pair of stops & times
  
    two columns, showing start and arrival

    map: big circles for start and end, color coded same as in #2



Step 2:

  calculate all stops (with locations), shapes for route and direction. 

Don't calculate trips data set until step 4.


select stop_id, stop_code, stop_name, stop_lat, stop_lon, trip_id, arrival_time, stop_sequence from route_stops_today('1', 0) as (stop_id varchar, stop_code varchar, stop_name varchar, stop_lat double precision, stop_lon double prec
ision, trip_id varchar, arrival_time varchar, stop_sequence integer);

EM for trips view? to update realtime



 trip_id  |                s1_name                 | s1_arrives | s1_seq |          s2_name           | s2_arrives | s2_seq





select
  trips.trip_id,

  (select stop_name from stops where stop_id = '70040') s1_name,
  st1.arrival_time s1_arrives,
  st1.stop_sequence s1_seq,

  (select stop_name from stops where stop_id = '70048') s2_name,
  st2.arrival_time s2_arrives,
  st2.stop_sequence s2_seq

from trips
  inner join stop_times st1 using (trip_id)
  inner join stop_times st2 using (trip_id)


where trips.trip_id in (select trip_id from route_trips_today('Blue Line', 1))
  and st1.stop_id = '70040'
  and st2.stop_id = '70048'

  order by st1.arrival_time;



1. keep all on one page
2. when 2 stops checked, hide other stops, show next arrivals
3. when < 2 stops checked, show all stop choices
4. show time frame around now?
5. websockets? a channel is one route, dir, + 2 stops
6. google map resize and pan 

- cache the route selector data ahead of time; make switching fast
-

http://stackoverflow.com/questions/3373219/how-can-i-get-the-smallest-latlngbounds-that-still-contains-a-set-of-lat-long-co




